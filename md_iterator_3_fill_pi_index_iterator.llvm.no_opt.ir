; ModuleID = 'md_iterator_3.cpp'
source_filename = "md_iterator_3.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"class.std::__1::__libcpp_compressed_pair_imp" }
%"class.std::__1::__libcpp_compressed_pair_imp" = type { double* }
%struct.index_2d_iterator_sentinel_range = type { %struct.index_2d_iterator, %"struct.index_2d_iterator::sentinel" }
%struct.index_2d_iterator = type { %struct.dimension, %struct.dimension }
%struct.dimension = type { i64, i64 }
%"struct.index_2d_iterator::sentinel" = type { i64 }
%struct.position = type { i64, i64 }

$_ZNSt3__16vectorIdNS_9allocatorIdEEE4dataEv = comdat any

$_ZN32index_2d_iterator_sentinel_rangeC2Ell = comdat any

$_ZNK32index_2d_iterator_sentinel_range5beginEv = comdat any

$_ZNK32index_2d_iterator_sentinel_range3endEv = comdat any

$_ZneRK17index_2d_iteratorNS_8sentinelE = comdat any

$_ZNK17index_2d_iteratordeEv = comdat any

$_ZN17index_2d_iteratorppEv = comdat any

$_ZN17index_2d_iteratorC2E9dimensionS0_ = comdat any

$_ZN17index_2d_iterator8sentinelC2El = comdat any

$_ZeqRK17index_2d_iteratorNS_8sentinelE = comdat any

$_ZNSt3__116__to_raw_pointerIdEEPT_S2_ = comdat any

; Function Attrs: nounwind
define void @_Z40fill_pi_index_iterator_sentinel_range_NNlRNSt3__16vectorIdNS_9allocatorIdEEEE(i64, %"class.std::__1::vector"* dereferenceable(24)) #0 !dbg !5 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::vector"*, align 8
  %5 = alloca double*, align 8
  %6 = alloca %struct.index_2d_iterator_sentinel_range*, align 8
  %7 = alloca %struct.index_2d_iterator_sentinel_range, align 8
  %8 = alloca %struct.index_2d_iterator, align 8
  %9 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %10 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %11 = alloca %struct.position, align 8
  store i64 %0, i64* %3, align 8, !tbaa !7
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %4, align 8, !tbaa !11
  %12 = bitcast double** %5 to i8*, !dbg !12
  call void @llvm.lifetime.start(i64 8, i8* %12) #3, !dbg !12
  %13 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8, !dbg !13
  %14 = call double* @_ZNSt3__16vectorIdNS_9allocatorIdEEE4dataEv(%"class.std::__1::vector"* %13) #3, !dbg !14
  store double* %14, double** %5, align 8, !dbg !15, !tbaa !16
  %15 = load i64, i64* %3, align 8, !dbg !18, !tbaa !7
  %16 = srem i64 %15, 32, !dbg !18
  %17 = icmp eq i64 %16, 0, !dbg !18
  call void @llvm.assume(i1 %17), !dbg !18
  %18 = load double*, double** %5, align 8, !dbg !19, !tbaa !16
  %19 = bitcast double* %18 to i8*, !dbg !19
  %20 = ptrtoint i8* %19 to i64, !dbg !19
  %21 = and i64 %20, 31, !dbg !19
  %22 = icmp eq i64 %21, 0, !dbg !19
  call void @llvm.assume(i1 %22), !dbg !19
  %23 = bitcast i8* %19 to double*, !dbg !19
  store double* %23, double** %5, align 8, !dbg !19, !tbaa !16
  %24 = bitcast %struct.index_2d_iterator_sentinel_range** %6 to i8*, !dbg !20
  call void @llvm.lifetime.start(i64 8, i8* %24) #3, !dbg !20
  %25 = bitcast %struct.index_2d_iterator_sentinel_range* %7 to i8*, !dbg !21
  call void @llvm.lifetime.start(i64 40, i8* %25) #3, !dbg !21
  %26 = load i64, i64* %3, align 8, !dbg !22, !tbaa !7
  %27 = load i64, i64* %3, align 8, !dbg !23, !tbaa !7
  call void @_ZN32index_2d_iterator_sentinel_rangeC2Ell(%struct.index_2d_iterator_sentinel_range* %7, i64 %26, i64 %27) #3, !dbg !21
  store %struct.index_2d_iterator_sentinel_range* %7, %struct.index_2d_iterator_sentinel_range** %6, align 8, !dbg !24, !tbaa !11
  %28 = bitcast %struct.index_2d_iterator* %8 to i8*, !dbg !25
  call void @llvm.lifetime.start(i64 32, i8* %28) #3, !dbg !25
  %29 = load %struct.index_2d_iterator_sentinel_range*, %struct.index_2d_iterator_sentinel_range** %6, align 8, !dbg !26
  call void @_ZNK32index_2d_iterator_sentinel_range5beginEv(%struct.index_2d_iterator* sret %8, %struct.index_2d_iterator_sentinel_range* %29) #3, !dbg !27
  %30 = bitcast %"struct.index_2d_iterator::sentinel"* %9 to i8*, !dbg !28
  call void @llvm.lifetime.start(i64 8, i8* %30) #3, !dbg !28
  %31 = load %struct.index_2d_iterator_sentinel_range*, %struct.index_2d_iterator_sentinel_range** %6, align 8, !dbg !29
  %32 = call i64 @_ZNK32index_2d_iterator_sentinel_range3endEv(%struct.index_2d_iterator_sentinel_range* %31) #3, !dbg !30
  %33 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %9, i32 0, i32 0, !dbg !30
  store i64 %32, i64* %33, align 8, !dbg !30
  br label %34, !dbg !31

; <label>:34:                                     ; preds = %58, %2
  %35 = bitcast %"struct.index_2d_iterator::sentinel"* %10 to i8*, !dbg !32
  %36 = bitcast %"struct.index_2d_iterator::sentinel"* %9 to i8*, !dbg !32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false), !dbg !32, !tbaa.struct !33
  %37 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %10, i32 0, i32 0, !dbg !34
  %38 = load i64, i64* %37, align 8, !dbg !34
  %39 = call zeroext i1 @_ZneRK17index_2d_iteratorNS_8sentinelE(%struct.index_2d_iterator* dereferenceable(32) %8, i64 %38) #3, !dbg !34
  br i1 %39, label %40, label %60, !dbg !31

; <label>:40:                                     ; preds = %34
  %41 = bitcast %struct.position* %11 to i8*, !dbg !35
  call void @llvm.lifetime.start(i64 16, i8* %41) #3, !dbg !35
  %42 = call { i64, i64 } @_ZNK17index_2d_iteratordeEv(%struct.index_2d_iterator* %8) #3, !dbg !36
  %43 = bitcast %struct.position* %11 to { i64, i64 }*, !dbg !36
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %43, i32 0, i32 0, !dbg !36
  %45 = extractvalue { i64, i64 } %42, 0, !dbg !36
  store i64 %45, i64* %44, align 8, !dbg !36
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %43, i32 0, i32 1, !dbg !36
  %47 = extractvalue { i64, i64 } %42, 1, !dbg !36
  store i64 %47, i64* %46, align 8, !dbg !36
  %48 = load double*, double** %5, align 8, !dbg !37, !tbaa !16
  %49 = getelementptr inbounds %struct.position, %struct.position* %11, i32 0, i32 0, !dbg !38
  %50 = load i64, i64* %49, align 8, !dbg !38, !tbaa !39
  %51 = getelementptr inbounds %struct.position, %struct.position* %11, i32 0, i32 1, !dbg !41
  %52 = load i64, i64* %51, align 8, !dbg !41, !tbaa !42
  %53 = load i64, i64* %3, align 8, !dbg !43, !tbaa !7
  %54 = mul nsw i64 %52, %53, !dbg !44
  %55 = add nsw i64 %50, %54, !dbg !45
  %56 = getelementptr inbounds double, double* %48, i64 %55, !dbg !37
  store double 0x40091EB860000000, double* %56, align 8, !dbg !46, !tbaa !47
  %57 = bitcast %struct.position* %11 to i8*, !dbg !49
  call void @llvm.lifetime.end(i64 16, i8* %57) #3, !dbg !49
  br label %58, !dbg !49

; <label>:58:                                     ; preds = %40
  %59 = call dereferenceable(32) %struct.index_2d_iterator* @_ZN17index_2d_iteratorppEv(%struct.index_2d_iterator* %8) #3, !dbg !50
  br label %34, !dbg !31, !llvm.loop !51

; <label>:60:                                     ; preds = %34
  %61 = bitcast %"struct.index_2d_iterator::sentinel"* %9 to i8*, !dbg !53
  call void @llvm.lifetime.end(i64 8, i8* %61) #3, !dbg !53
  %62 = bitcast %struct.index_2d_iterator* %8 to i8*, !dbg !53
  call void @llvm.lifetime.end(i64 32, i8* %62) #3, !dbg !53
  %63 = bitcast %struct.index_2d_iterator_sentinel_range** %6 to i8*, !dbg !53
  call void @llvm.lifetime.end(i64 8, i8* %63) #3, !dbg !53
  %64 = bitcast %struct.index_2d_iterator_sentinel_range* %7 to i8*, !dbg !53
  call void @llvm.lifetime.end(i64 40, i8* %64) #3, !dbg !53
  %65 = bitcast double** %5 to i8*, !dbg !53
  call void @llvm.lifetime.end(i64 8, i8* %65) #3, !dbg !53
  ret void, !dbg !53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: alwaysinline nounwind
define linkonce_odr hidden double* @_ZNSt3__16vectorIdNS_9allocatorIdEEE4dataEv(%"class.std::__1::vector"*) #2 comdat align 2 !dbg !54 {
  %2 = alloca %"class.std::__1::vector"*, align 8
  store %"class.std::__1::vector"* %0, %"class.std::__1::vector"** %2, align 8, !tbaa !16
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  %4 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base"*, !dbg !56
  %5 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %4, i32 0, i32 0, !dbg !56
  %6 = load double*, double** %5, align 8, !dbg !56, !tbaa !57
  %7 = call double* @_ZNSt3__116__to_raw_pointerIdEEPT_S2_(double* %6) #3, !dbg !60
  ret double* %7, !dbg !61
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #3

; Function Attrs: nounwind
define linkonce_odr void @_ZN32index_2d_iterator_sentinel_rangeC2Ell(%struct.index_2d_iterator_sentinel_range*, i64, i64) unnamed_addr #0 comdat align 2 !dbg !62 {
  %4 = alloca %struct.index_2d_iterator_sentinel_range*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.dimension, align 8
  %8 = alloca %struct.dimension, align 8
  store %struct.index_2d_iterator_sentinel_range* %0, %struct.index_2d_iterator_sentinel_range** %4, align 8, !tbaa !16
  store i64 %1, i64* %5, align 8, !tbaa !7
  store i64 %2, i64* %6, align 8, !tbaa !7
  %9 = load %struct.index_2d_iterator_sentinel_range*, %struct.index_2d_iterator_sentinel_range** %4, align 8
  %10 = getelementptr inbounds %struct.index_2d_iterator_sentinel_range, %struct.index_2d_iterator_sentinel_range* %9, i32 0, i32 0, !dbg !63
  %11 = getelementptr inbounds %struct.dimension, %struct.dimension* %7, i32 0, i32 0, !dbg !64
  %12 = load i64, i64* %5, align 8, !dbg !65, !tbaa !7
  store i64 %12, i64* %11, align 8, !dbg !64, !tbaa !66
  %13 = getelementptr inbounds %struct.dimension, %struct.dimension* %7, i32 0, i32 1, !dbg !64
  store i64 0, i64* %13, align 8, !dbg !64, !tbaa !68
  %14 = getelementptr inbounds %struct.dimension, %struct.dimension* %8, i32 0, i32 0, !dbg !69
  %15 = load i64, i64* %6, align 8, !dbg !70, !tbaa !7
  store i64 %15, i64* %14, align 8, !dbg !69, !tbaa !66
  %16 = getelementptr inbounds %struct.dimension, %struct.dimension* %8, i32 0, i32 1, !dbg !69
  store i64 0, i64* %16, align 8, !dbg !69, !tbaa !68
  %17 = bitcast %struct.dimension* %7 to { i64, i64 }*, !dbg !63
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 0, !dbg !63
  %19 = load i64, i64* %18, align 8, !dbg !63
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i32 0, i32 1, !dbg !63
  %21 = load i64, i64* %20, align 8, !dbg !63
  %22 = bitcast %struct.dimension* %8 to { i64, i64 }*, !dbg !63
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !63
  %24 = load i64, i64* %23, align 8, !dbg !63
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !63
  %26 = load i64, i64* %25, align 8, !dbg !63
  call void @_ZN17index_2d_iteratorC2E9dimensionS0_(%struct.index_2d_iterator* %10, i64 %19, i64 %21, i64 %24, i64 %26) #3, !dbg !63
  %27 = getelementptr inbounds %struct.index_2d_iterator_sentinel_range, %struct.index_2d_iterator_sentinel_range* %9, i32 0, i32 1, !dbg !71
  %28 = load i64, i64* %6, align 8, !dbg !72, !tbaa !7
  call void @_ZN17index_2d_iterator8sentinelC2El(%"struct.index_2d_iterator::sentinel"* %27, i64 %28) #3, !dbg !71
  ret void, !dbg !73
}

; Function Attrs: nounwind
define linkonce_odr void @_ZNK32index_2d_iterator_sentinel_range5beginEv(%struct.index_2d_iterator* noalias sret, %struct.index_2d_iterator_sentinel_range*) #0 comdat align 2 !dbg !74 {
  %3 = alloca %struct.index_2d_iterator_sentinel_range*, align 8
  store %struct.index_2d_iterator_sentinel_range* %1, %struct.index_2d_iterator_sentinel_range** %3, align 8, !tbaa !16
  %4 = load %struct.index_2d_iterator_sentinel_range*, %struct.index_2d_iterator_sentinel_range** %3, align 8
  %5 = getelementptr inbounds %struct.index_2d_iterator_sentinel_range, %struct.index_2d_iterator_sentinel_range* %4, i32 0, i32 0, !dbg !75
  %6 = bitcast %struct.index_2d_iterator* %0 to i8*, !dbg !75
  %7 = bitcast %struct.index_2d_iterator* %5 to i8*, !dbg !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 32, i32 8, i1 false), !dbg !75, !tbaa.struct !76
  ret void, !dbg !77
}

; Function Attrs: nounwind
define linkonce_odr i64 @_ZNK32index_2d_iterator_sentinel_range3endEv(%struct.index_2d_iterator_sentinel_range*) #0 comdat align 2 !dbg !78 {
  %2 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %3 = alloca %struct.index_2d_iterator_sentinel_range*, align 8
  store %struct.index_2d_iterator_sentinel_range* %0, %struct.index_2d_iterator_sentinel_range** %3, align 8, !tbaa !16
  %4 = load %struct.index_2d_iterator_sentinel_range*, %struct.index_2d_iterator_sentinel_range** %3, align 8
  %5 = getelementptr inbounds %struct.index_2d_iterator_sentinel_range, %struct.index_2d_iterator_sentinel_range* %4, i32 0, i32 1, !dbg !79
  %6 = bitcast %"struct.index_2d_iterator::sentinel"* %2 to i8*, !dbg !79
  %7 = bitcast %"struct.index_2d_iterator::sentinel"* %5 to i8*, !dbg !79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false), !dbg !79, !tbaa.struct !33
  %8 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %2, i32 0, i32 0, !dbg !80
  %9 = load i64, i64* %8, align 8, !dbg !80
  ret i64 %9, !dbg !80
}

; Function Attrs: nounwind
define linkonce_odr zeroext i1 @_ZneRK17index_2d_iteratorNS_8sentinelE(%struct.index_2d_iterator* dereferenceable(32), i64) #0 comdat !dbg !81 {
  %3 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %4 = alloca %struct.index_2d_iterator*, align 8
  %5 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %6 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %3, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  store %struct.index_2d_iterator* %0, %struct.index_2d_iterator** %4, align 8, !tbaa !11
  %7 = load %struct.index_2d_iterator*, %struct.index_2d_iterator** %4, align 8, !dbg !82
  %8 = bitcast %"struct.index_2d_iterator::sentinel"* %5 to i8*, !dbg !83
  %9 = bitcast %"struct.index_2d_iterator::sentinel"* %3 to i8*, !dbg !83
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 8, i1 false), !dbg !83, !tbaa.struct !33
  %10 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %5, i32 0, i32 0, !dbg !84
  %11 = load i64, i64* %10, align 8, !dbg !84
  %12 = call zeroext i1 @_ZeqRK17index_2d_iteratorNS_8sentinelE(%struct.index_2d_iterator* dereferenceable(32) %7, i64 %11) #3, !dbg !84
  %13 = xor i1 %12, true, !dbg !85
  ret i1 %13, !dbg !86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind
define linkonce_odr { i64, i64 } @_ZNK17index_2d_iteratordeEv(%struct.index_2d_iterator*) #0 comdat align 2 !dbg !87 {
  %2 = alloca %struct.position, align 8
  %3 = alloca %struct.index_2d_iterator*, align 8
  store %struct.index_2d_iterator* %0, %struct.index_2d_iterator** %3, align 8, !tbaa !16
  %4 = load %struct.index_2d_iterator*, %struct.index_2d_iterator** %3, align 8
  %5 = getelementptr inbounds %struct.position, %struct.position* %2, i32 0, i32 0, !dbg !88
  %6 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %4, i32 0, i32 0, !dbg !89
  %7 = getelementptr inbounds %struct.dimension, %struct.dimension* %6, i32 0, i32 1, !dbg !90
  %8 = load i64, i64* %7, align 8, !dbg !90, !tbaa !91
  store i64 %8, i64* %5, align 8, !dbg !88, !tbaa !39
  %9 = getelementptr inbounds %struct.position, %struct.position* %2, i32 0, i32 1, !dbg !88
  %10 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %4, i32 0, i32 1, !dbg !93
  %11 = getelementptr inbounds %struct.dimension, %struct.dimension* %10, i32 0, i32 1, !dbg !94
  %12 = load i64, i64* %11, align 8, !dbg !94, !tbaa !95
  store i64 %12, i64* %9, align 8, !dbg !88, !tbaa !42
  %13 = bitcast %struct.position* %2 to { i64, i64 }*, !dbg !96
  %14 = load { i64, i64 }, { i64, i64 }* %13, align 8, !dbg !96
  ret { i64, i64 } %14, !dbg !96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind
define linkonce_odr dereferenceable(32) %struct.index_2d_iterator* @_ZN17index_2d_iteratorppEv(%struct.index_2d_iterator*) #0 comdat align 2 !dbg !97 {
  %2 = alloca %struct.index_2d_iterator*, align 8
  store %struct.index_2d_iterator* %0, %struct.index_2d_iterator** %2, align 8, !tbaa !16
  %3 = load %struct.index_2d_iterator*, %struct.index_2d_iterator** %2, align 8
  %4 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %3, i32 0, i32 0, !dbg !98
  %5 = getelementptr inbounds %struct.dimension, %struct.dimension* %4, i32 0, i32 1, !dbg !98
  %6 = load i64, i64* %5, align 8, !dbg !98, !tbaa !91
  %7 = icmp sge i64 %6, 0, !dbg !98
  call void @llvm.assume(i1 %7), !dbg !98
  %8 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %3, i32 0, i32 0, !dbg !99
  %9 = getelementptr inbounds %struct.dimension, %struct.dimension* %8, i32 0, i32 0, !dbg !99
  %10 = load i64, i64* %9, align 8, !dbg !99, !tbaa !100
  %11 = icmp sgt i64 %10, 0, !dbg !99
  call void @llvm.assume(i1 %11), !dbg !99
  %12 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %3, i32 0, i32 0, !dbg !101
  %13 = getelementptr inbounds %struct.dimension, %struct.dimension* %12, i32 0, i32 1, !dbg !102
  %14 = load i64, i64* %13, align 8, !dbg !103, !tbaa !91
  %15 = add nsw i64 %14, 1, !dbg !103
  store i64 %15, i64* %13, align 8, !dbg !103, !tbaa !91
  %16 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %3, i32 0, i32 0, !dbg !104
  %17 = getelementptr inbounds %struct.dimension, %struct.dimension* %16, i32 0, i32 0, !dbg !105
  %18 = load i64, i64* %17, align 8, !dbg !105, !tbaa !100
  %19 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %3, i32 0, i32 0, !dbg !106
  %20 = getelementptr inbounds %struct.dimension, %struct.dimension* %19, i32 0, i32 1, !dbg !107
  %21 = load i64, i64* %20, align 8, !dbg !107, !tbaa !91
  %22 = icmp eq i64 %18, %21, !dbg !108
  br i1 %22, label %23, label %30, !dbg !104

; <label>:23:                                     ; preds = %1
  %24 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %3, i32 0, i32 1, !dbg !109
  %25 = getelementptr inbounds %struct.dimension, %struct.dimension* %24, i32 0, i32 1, !dbg !110
  %26 = load i64, i64* %25, align 8, !dbg !111, !tbaa !95
  %27 = add nsw i64 %26, 1, !dbg !111
  store i64 %27, i64* %25, align 8, !dbg !111, !tbaa !95
  %28 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %3, i32 0, i32 0, !dbg !112
  %29 = getelementptr inbounds %struct.dimension, %struct.dimension* %28, i32 0, i32 1, !dbg !113
  store i64 0, i64* %29, align 8, !dbg !114, !tbaa !91
  br label %30, !dbg !115

; <label>:30:                                     ; preds = %23, %1
  ret %struct.index_2d_iterator* %3, !dbg !116
}

; Function Attrs: nounwind
define void @_Z40fill_pi_index_iterator_sentinel_range_NMllRNSt3__16vectorIdNS_9allocatorIdEEEE(i64, i64, %"class.std::__1::vector"* dereferenceable(24)) #0 !dbg !117 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__1::vector"*, align 8
  %7 = alloca double*, align 8
  %8 = alloca %struct.index_2d_iterator_sentinel_range*, align 8
  %9 = alloca %struct.index_2d_iterator_sentinel_range, align 8
  %10 = alloca %struct.index_2d_iterator, align 8
  %11 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %12 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %13 = alloca %struct.position, align 8
  store i64 %0, i64* %4, align 8, !tbaa !7
  store i64 %1, i64* %5, align 8, !tbaa !7
  store %"class.std::__1::vector"* %2, %"class.std::__1::vector"** %6, align 8, !tbaa !11
  %14 = bitcast double** %7 to i8*, !dbg !118
  call void @llvm.lifetime.start(i64 8, i8* %14) #3, !dbg !118
  %15 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %6, align 8, !dbg !119
  %16 = call double* @_ZNSt3__16vectorIdNS_9allocatorIdEEE4dataEv(%"class.std::__1::vector"* %15) #3, !dbg !120
  store double* %16, double** %7, align 8, !dbg !121, !tbaa !16
  %17 = load i64, i64* %4, align 8, !dbg !122, !tbaa !7
  %18 = srem i64 %17, 32, !dbg !122
  %19 = icmp eq i64 %18, 0, !dbg !122
  call void @llvm.assume(i1 %19), !dbg !122
  %20 = load i64, i64* %5, align 8, !dbg !123, !tbaa !7
  %21 = srem i64 %20, 32, !dbg !123
  %22 = icmp eq i64 %21, 0, !dbg !123
  call void @llvm.assume(i1 %22), !dbg !123
  %23 = load double*, double** %7, align 8, !dbg !124, !tbaa !16
  %24 = bitcast double* %23 to i8*, !dbg !124
  %25 = ptrtoint i8* %24 to i64, !dbg !124
  %26 = and i64 %25, 31, !dbg !124
  %27 = icmp eq i64 %26, 0, !dbg !124
  call void @llvm.assume(i1 %27), !dbg !124
  %28 = bitcast i8* %24 to double*, !dbg !124
  store double* %28, double** %7, align 8, !dbg !124, !tbaa !16
  %29 = bitcast %struct.index_2d_iterator_sentinel_range** %8 to i8*, !dbg !125
  call void @llvm.lifetime.start(i64 8, i8* %29) #3, !dbg !125
  %30 = bitcast %struct.index_2d_iterator_sentinel_range* %9 to i8*, !dbg !126
  call void @llvm.lifetime.start(i64 40, i8* %30) #3, !dbg !126
  %31 = load i64, i64* %4, align 8, !dbg !127, !tbaa !7
  %32 = load i64, i64* %5, align 8, !dbg !128, !tbaa !7
  call void @_ZN32index_2d_iterator_sentinel_rangeC2Ell(%struct.index_2d_iterator_sentinel_range* %9, i64 %31, i64 %32) #3, !dbg !126
  store %struct.index_2d_iterator_sentinel_range* %9, %struct.index_2d_iterator_sentinel_range** %8, align 8, !dbg !129, !tbaa !11
  %33 = bitcast %struct.index_2d_iterator* %10 to i8*, !dbg !130
  call void @llvm.lifetime.start(i64 32, i8* %33) #3, !dbg !130
  %34 = load %struct.index_2d_iterator_sentinel_range*, %struct.index_2d_iterator_sentinel_range** %8, align 8, !dbg !131
  call void @_ZNK32index_2d_iterator_sentinel_range5beginEv(%struct.index_2d_iterator* sret %10, %struct.index_2d_iterator_sentinel_range* %34) #3, !dbg !132
  %35 = bitcast %"struct.index_2d_iterator::sentinel"* %11 to i8*, !dbg !133
  call void @llvm.lifetime.start(i64 8, i8* %35) #3, !dbg !133
  %36 = load %struct.index_2d_iterator_sentinel_range*, %struct.index_2d_iterator_sentinel_range** %8, align 8, !dbg !134
  %37 = call i64 @_ZNK32index_2d_iterator_sentinel_range3endEv(%struct.index_2d_iterator_sentinel_range* %36) #3, !dbg !135
  %38 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %11, i32 0, i32 0, !dbg !135
  store i64 %37, i64* %38, align 8, !dbg !135
  br label %39, !dbg !136

; <label>:39:                                     ; preds = %63, %3
  %40 = bitcast %"struct.index_2d_iterator::sentinel"* %12 to i8*, !dbg !137
  %41 = bitcast %"struct.index_2d_iterator::sentinel"* %11 to i8*, !dbg !137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false), !dbg !137, !tbaa.struct !33
  %42 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %12, i32 0, i32 0, !dbg !138
  %43 = load i64, i64* %42, align 8, !dbg !138
  %44 = call zeroext i1 @_ZneRK17index_2d_iteratorNS_8sentinelE(%struct.index_2d_iterator* dereferenceable(32) %10, i64 %43) #3, !dbg !138
  br i1 %44, label %45, label %65, !dbg !136

; <label>:45:                                     ; preds = %39
  %46 = bitcast %struct.position* %13 to i8*, !dbg !139
  call void @llvm.lifetime.start(i64 16, i8* %46) #3, !dbg !139
  %47 = call { i64, i64 } @_ZNK17index_2d_iteratordeEv(%struct.index_2d_iterator* %10) #3, !dbg !140
  %48 = bitcast %struct.position* %13 to { i64, i64 }*, !dbg !140
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 0, !dbg !140
  %50 = extractvalue { i64, i64 } %47, 0, !dbg !140
  store i64 %50, i64* %49, align 8, !dbg !140
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 1, !dbg !140
  %52 = extractvalue { i64, i64 } %47, 1, !dbg !140
  store i64 %52, i64* %51, align 8, !dbg !140
  %53 = load double*, double** %7, align 8, !dbg !141, !tbaa !16
  %54 = getelementptr inbounds %struct.position, %struct.position* %13, i32 0, i32 0, !dbg !142
  %55 = load i64, i64* %54, align 8, !dbg !142, !tbaa !39
  %56 = getelementptr inbounds %struct.position, %struct.position* %13, i32 0, i32 1, !dbg !143
  %57 = load i64, i64* %56, align 8, !dbg !143, !tbaa !42
  %58 = load i64, i64* %4, align 8, !dbg !144, !tbaa !7
  %59 = mul nsw i64 %57, %58, !dbg !145
  %60 = add nsw i64 %55, %59, !dbg !146
  %61 = getelementptr inbounds double, double* %53, i64 %60, !dbg !141
  store double 0x40091EB860000000, double* %61, align 8, !dbg !147, !tbaa !47
  %62 = bitcast %struct.position* %13 to i8*, !dbg !148
  call void @llvm.lifetime.end(i64 16, i8* %62) #3, !dbg !148
  br label %63, !dbg !148

; <label>:63:                                     ; preds = %45
  %64 = call dereferenceable(32) %struct.index_2d_iterator* @_ZN17index_2d_iteratorppEv(%struct.index_2d_iterator* %10) #3, !dbg !149
  br label %39, !dbg !136, !llvm.loop !150

; <label>:65:                                     ; preds = %39
  %66 = bitcast %"struct.index_2d_iterator::sentinel"* %11 to i8*, !dbg !151
  call void @llvm.lifetime.end(i64 8, i8* %66) #3, !dbg !151
  %67 = bitcast %struct.index_2d_iterator* %10 to i8*, !dbg !151
  call void @llvm.lifetime.end(i64 32, i8* %67) #3, !dbg !151
  %68 = bitcast %struct.index_2d_iterator_sentinel_range** %8 to i8*, !dbg !151
  call void @llvm.lifetime.end(i64 8, i8* %68) #3, !dbg !151
  %69 = bitcast %struct.index_2d_iterator_sentinel_range* %9 to i8*, !dbg !151
  call void @llvm.lifetime.end(i64 40, i8* %69) #3, !dbg !151
  %70 = bitcast double** %7 to i8*, !dbg !151
  call void @llvm.lifetime.end(i64 8, i8* %70) #3, !dbg !151
  ret void, !dbg !151
}

; Function Attrs: nounwind
define linkonce_odr void @_ZN17index_2d_iteratorC2E9dimensionS0_(%struct.index_2d_iterator*, i64, i64, i64, i64) unnamed_addr #0 comdat align 2 !dbg !152 {
  %6 = alloca %struct.dimension, align 8
  %7 = alloca %struct.dimension, align 8
  %8 = alloca %struct.index_2d_iterator*, align 8
  %9 = bitcast %struct.dimension* %6 to { i64, i64 }*
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = bitcast %struct.dimension* %7 to { i64, i64 }*
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0
  store i64 %3, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1
  store i64 %4, i64* %14, align 8
  store %struct.index_2d_iterator* %0, %struct.index_2d_iterator** %8, align 8, !tbaa !16
  %15 = load %struct.index_2d_iterator*, %struct.index_2d_iterator** %8, align 8
  %16 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %15, i32 0, i32 0, !dbg !153
  %17 = bitcast %struct.dimension* %16 to i8*, !dbg !153
  %18 = bitcast %struct.dimension* %6 to i8*, !dbg !153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false), !dbg !153, !tbaa.struct !154
  %19 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %15, i32 0, i32 1, !dbg !155
  %20 = bitcast %struct.dimension* %19 to i8*, !dbg !155
  %21 = bitcast %struct.dimension* %7 to i8*, !dbg !155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false), !dbg !155, !tbaa.struct !154
  ret void, !dbg !156
}

; Function Attrs: nounwind
define linkonce_odr void @_ZN17index_2d_iterator8sentinelC2El(%"struct.index_2d_iterator::sentinel"*, i64) unnamed_addr #0 comdat align 2 !dbg !157 {
  %3 = alloca %"struct.index_2d_iterator::sentinel"*, align 8
  %4 = alloca i64, align 8
  store %"struct.index_2d_iterator::sentinel"* %0, %"struct.index_2d_iterator::sentinel"** %3, align 8, !tbaa !16
  store i64 %1, i64* %4, align 8, !tbaa !7
  %5 = load %"struct.index_2d_iterator::sentinel"*, %"struct.index_2d_iterator::sentinel"** %3, align 8
  %6 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %5, i32 0, i32 0, !dbg !158
  %7 = load i64, i64* %4, align 8, !dbg !159, !tbaa !7
  store i64 %7, i64* %6, align 8, !dbg !158, !tbaa !160
  ret void, !dbg !162
}

; Function Attrs: nounwind
define linkonce_odr zeroext i1 @_ZeqRK17index_2d_iteratorNS_8sentinelE(%struct.index_2d_iterator* dereferenceable(32), i64) #0 comdat !dbg !163 {
  %3 = alloca %"struct.index_2d_iterator::sentinel", align 8
  %4 = alloca %struct.index_2d_iterator*, align 8
  %5 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %3, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  store %struct.index_2d_iterator* %0, %struct.index_2d_iterator** %4, align 8, !tbaa !11
  %6 = load %struct.index_2d_iterator*, %struct.index_2d_iterator** %4, align 8, !dbg !164
  %7 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %6, i32 0, i32 1, !dbg !164
  %8 = getelementptr inbounds %struct.dimension, %struct.dimension* %7, i32 0, i32 1, !dbg !164
  %9 = load i64, i64* %8, align 8, !dbg !164, !tbaa !95
  %10 = icmp sge i64 %9, 0, !dbg !164
  call void @llvm.assume(i1 %10), !dbg !164
  %11 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %3, i32 0, i32 0, !dbg !165
  %12 = load i64, i64* %11, align 8, !dbg !165, !tbaa !160
  %13 = icmp sgt i64 %12, 0, !dbg !165
  call void @llvm.assume(i1 %13), !dbg !165
  %14 = load %struct.index_2d_iterator*, %struct.index_2d_iterator** %4, align 8, !dbg !166
  %15 = getelementptr inbounds %struct.index_2d_iterator, %struct.index_2d_iterator* %14, i32 0, i32 1, !dbg !167
  %16 = getelementptr inbounds %struct.dimension, %struct.dimension* %15, i32 0, i32 1, !dbg !168
  %17 = load i64, i64* %16, align 8, !dbg !168, !tbaa !95
  %18 = getelementptr inbounds %"struct.index_2d_iterator::sentinel", %"struct.index_2d_iterator::sentinel"* %3, i32 0, i32 0, !dbg !169
  %19 = load i64, i64* %18, align 8, !dbg !169, !tbaa !160
  %20 = icmp eq i64 %17, %19, !dbg !170
  ret i1 %20, !dbg !171
}

; Function Attrs: alwaysinline nounwind
define linkonce_odr hidden double* @_ZNSt3__116__to_raw_pointerIdEEPT_S2_(double*) #2 comdat !dbg !172 {
  %2 = alloca double*, align 8
  store double* %0, double** %2, align 8, !tbaa !16
  %3 = load double*, double** %2, align 8, !dbg !174, !tbaa !16
  ret double* %3, !dbg !175
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vl,-clflushopt,-clwb,-clzero,-fma4,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-sse4a,-tbm,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { alwaysinline nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vl,-clflushopt,-clwb,-clzero,-fma4,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-sse4a,-tbm,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 5.0.0 (git@github.com:GorNishanov/clang.git 7fe33d27853beaa85b039482586ef86039a74b56) (git@github.com:GorNishanov/llvm.git bb958011044a060bda6af65d0e50dfbb52a8a604)", isOptimized: true, runtimeVersion: 0, emissionKind: NoDebug, enums: !2)
!1 = !DIFile(filename: "md_iterator_3.cpp", directory: "/global/homes/w/wash/sandbox/cxx/mditerator")
!2 = !{}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{!"clang version 5.0.0 (git@github.com:GorNishanov/clang.git 7fe33d27853beaa85b039482586ef86039a74b56) (git@github.com:GorNishanov/llvm.git bb958011044a060bda6af65d0e50dfbb52a8a604)"}
!5 = distinct !DISubprogram(name: "fill_pi_index_iterator_sentinel_range_NN", scope: !1, file: !1, line: 684, type: !6, isLocal: false, isDefinition: true, scopeLine: 688, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!6 = !DISubroutineType(types: !2)
!7 = !{!8, !8, i64 0}
!8 = !{!"long", !9, i64 0}
!9 = !{!"omnipotent char", !10, i64 0}
!10 = !{!"Simple C++ TBAA"}
!11 = !{!9, !9, i64 0}
!12 = !DILocation(line: 689, column: 5, scope: !5)
!13 = !DILocation(line: 689, column: 30, scope: !5)
!14 = !DILocation(line: 689, column: 33, scope: !5)
!15 = !DILocation(line: 689, column: 26, scope: !5)
!16 = !{!17, !17, i64 0}
!17 = !{!"any pointer", !9, i64 0}
!18 = !DILocation(line: 691, column: 5, scope: !5)
!19 = !DILocation(line: 692, column: 5, scope: !5)
!20 = !DILocation(line: 694, column: 5, scope: !5)
!21 = !DILocation(line: 694, column: 18, scope: !5)
!22 = !DILocation(line: 694, column: 51, scope: !5)
!23 = !DILocation(line: 694, column: 54, scope: !5)
!24 = !DILocation(line: 694, column: 12, scope: !5)
!25 = !DILocation(line: 695, column: 5, scope: !5)
!26 = !DILocation(line: 695, column: 18, scope: !5)
!27 = !DILocation(line: 695, column: 20, scope: !5)
!28 = !DILocation(line: 696, column: 5, scope: !5)
!29 = !DILocation(line: 696, column: 18, scope: !5)
!30 = !DILocation(line: 696, column: 20, scope: !5)
!31 = !DILocation(line: 699, column: 5, scope: !5)
!32 = !DILocation(line: 699, column: 21, scope: !5)
!33 = !{i64 0, i64 8, !7}
!34 = !DILocation(line: 699, column: 18, scope: !5)
!35 = !DILocation(line: 701, column: 9, scope: !5)
!36 = !DILocation(line: 701, column: 20, scope: !5)
!37 = !DILocation(line: 702, column: 9, scope: !5)
!38 = !DILocation(line: 702, column: 15, scope: !5)
!39 = !{!40, !8, i64 0}
!40 = !{!"_ZTS8position", !8, i64 0, !8, i64 8}
!41 = !DILocation(line: 702, column: 23, scope: !5)
!42 = !{!40, !8, i64 8}
!43 = !DILocation(line: 702, column: 27, scope: !5)
!44 = !DILocation(line: 702, column: 25, scope: !5)
!45 = !DILocation(line: 702, column: 17, scope: !5)
!46 = !DILocation(line: 702, column: 30, scope: !5)
!47 = !{!48, !48, i64 0}
!48 = !{!"double", !9, i64 0}
!49 = !DILocation(line: 703, column: 5, scope: !5)
!50 = !DILocation(line: 699, column: 27, scope: !5)
!51 = distinct !{!51, !31, !49, !52}
!52 = !{!"llvm.loop.vectorize.enable", i1 true}
!53 = !DILocation(line: 704, column: 1, scope: !5)
!54 = distinct !DISubprogram(name: "data", scope: !55, file: !55, line: 670, type: !6, isLocal: false, isDefinition: true, scopeLine: 671, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!55 = !DIFile(filename: "/global/u1/w/wash/development/gor-llvm/INSTALL_RELEASE/bin/../include/c++/v1/vector", directory: "/global/homes/w/wash/sandbox/cxx/mditerator")
!56 = !DILocation(line: 671, column: 47, scope: !54)
!57 = !{!58, !17, i64 0}
!58 = !{!"_ZTSNSt3__113__vector_baseIdNS_9allocatorIdEEEE", !17, i64 0, !17, i64 8, !59, i64 16}
!59 = !{!"_ZTSNSt3__117__compressed_pairIPdNS_9allocatorIdEEEE"}
!60 = !DILocation(line: 671, column: 17, scope: !54)
!61 = !DILocation(line: 671, column: 10, scope: !54)
!62 = distinct !DISubprogram(name: "index_2d_iterator_sentinel_range", scope: !1, file: !1, line: 608, type: !6, isLocal: false, isDefinition: true, scopeLine: 613, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!63 = !DILocation(line: 612, column: 9, scope: !62)
!64 = !DILocation(line: 612, column: 24, scope: !62)
!65 = !DILocation(line: 612, column: 25, scope: !62)
!66 = !{!67, !8, i64 0}
!67 = !{!"_ZTS9dimension", !8, i64 0, !8, i64 8}
!68 = !{!67, !8, i64 8}
!69 = !DILocation(line: 612, column: 42, scope: !62)
!70 = !DILocation(line: 612, column: 43, scope: !62)
!71 = !DILocation(line: 612, column: 52, scope: !62)
!72 = !DILocation(line: 612, column: 57, scope: !62)
!73 = !DILocation(line: 613, column: 6, scope: !62)
!74 = distinct !DISubprogram(name: "begin", scope: !1, file: !1, line: 615, type: !6, isLocal: false, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!75 = !DILocation(line: 615, column: 65, scope: !74)
!76 = !{i64 0, i64 8, !7, i64 8, i64 8, !7, i64 16, i64 8, !7, i64 24, i64 8, !7}
!77 = !DILocation(line: 615, column: 58, scope: !74)
!78 = distinct !DISubprogram(name: "end", scope: !1, file: !1, line: 617, type: !6, isLocal: false, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!79 = !DILocation(line: 617, column: 73, scope: !78)
!80 = !DILocation(line: 617, column: 66, scope: !78)
!81 = distinct !DISubprogram(name: "operator!=", scope: !1, file: !1, line: 591, type: !6, isLocal: false, isDefinition: true, scopeLine: 595, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!82 = !DILocation(line: 596, column: 18, scope: !81)
!83 = !DILocation(line: 596, column: 23, scope: !81)
!84 = !DILocation(line: 596, column: 20, scope: !81)
!85 = !DILocation(line: 596, column: 16, scope: !81)
!86 = !DILocation(line: 596, column: 9, scope: !81)
!87 = distinct !DISubprogram(name: "operator*", scope: !1, file: !1, line: 556, type: !6, isLocal: false, isDefinition: true, scopeLine: 556, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!88 = !DILocation(line: 556, column: 60, scope: !87)
!89 = !DILocation(line: 556, column: 61, scope: !87)
!90 = !DILocation(line: 556, column: 63, scope: !87)
!91 = !{!92, !8, i64 8}
!92 = !{!"_ZTS17index_2d_iterator", !67, i64 0, !67, i64 16}
!93 = !DILocation(line: 556, column: 68, scope: !87)
!94 = !DILocation(line: 556, column: 70, scope: !87)
!95 = !{!92, !8, i64 24}
!96 = !DILocation(line: 556, column: 53, scope: !87)
!97 = distinct !DISubprogram(name: "operator++", scope: !1, file: !1, line: 507, type: !6, isLocal: false, isDefinition: true, scopeLine: 508, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!98 = !DILocation(line: 509, column: 9, scope: !97)
!99 = !DILocation(line: 510, column: 9, scope: !97)
!100 = !{!92, !8, i64 0}
!101 = !DILocation(line: 512, column: 11, scope: !97)
!102 = !DILocation(line: 512, column: 13, scope: !97)
!103 = !DILocation(line: 512, column: 9, scope: !97)
!104 = !DILocation(line: 514, column: 13, scope: !97)
!105 = !DILocation(line: 514, column: 15, scope: !97)
!106 = !DILocation(line: 514, column: 25, scope: !97)
!107 = !DILocation(line: 514, column: 27, scope: !97)
!108 = !DILocation(line: 514, column: 22, scope: !97)
!109 = !DILocation(line: 516, column: 15, scope: !97)
!110 = !DILocation(line: 516, column: 17, scope: !97)
!111 = !DILocation(line: 516, column: 13, scope: !97)
!112 = !DILocation(line: 517, column: 13, scope: !97)
!113 = !DILocation(line: 517, column: 15, scope: !97)
!114 = !DILocation(line: 517, column: 19, scope: !97)
!115 = !DILocation(line: 518, column: 9, scope: !97)
!116 = !DILocation(line: 520, column: 9, scope: !97)
!117 = distinct !DISubprogram(name: "fill_pi_index_iterator_sentinel_range_NM", scope: !1, file: !1, line: 706, type: !6, isLocal: false, isDefinition: true, scopeLine: 711, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!118 = !DILocation(line: 712, column: 5, scope: !117)
!119 = !DILocation(line: 712, column: 30, scope: !117)
!120 = !DILocation(line: 712, column: 33, scope: !117)
!121 = !DILocation(line: 712, column: 26, scope: !117)
!122 = !DILocation(line: 714, column: 5, scope: !117)
!123 = !DILocation(line: 715, column: 5, scope: !117)
!124 = !DILocation(line: 716, column: 5, scope: !117)
!125 = !DILocation(line: 718, column: 5, scope: !117)
!126 = !DILocation(line: 718, column: 18, scope: !117)
!127 = !DILocation(line: 718, column: 51, scope: !117)
!128 = !DILocation(line: 718, column: 54, scope: !117)
!129 = !DILocation(line: 718, column: 12, scope: !117)
!130 = !DILocation(line: 719, column: 5, scope: !117)
!131 = !DILocation(line: 719, column: 18, scope: !117)
!132 = !DILocation(line: 719, column: 20, scope: !117)
!133 = !DILocation(line: 720, column: 5, scope: !117)
!134 = !DILocation(line: 720, column: 18, scope: !117)
!135 = !DILocation(line: 720, column: 20, scope: !117)
!136 = !DILocation(line: 723, column: 5, scope: !117)
!137 = !DILocation(line: 723, column: 21, scope: !117)
!138 = !DILocation(line: 723, column: 18, scope: !117)
!139 = !DILocation(line: 725, column: 9, scope: !117)
!140 = !DILocation(line: 725, column: 20, scope: !117)
!141 = !DILocation(line: 726, column: 9, scope: !117)
!142 = !DILocation(line: 726, column: 15, scope: !117)
!143 = !DILocation(line: 726, column: 23, scope: !117)
!144 = !DILocation(line: 726, column: 27, scope: !117)
!145 = !DILocation(line: 726, column: 25, scope: !117)
!146 = !DILocation(line: 726, column: 17, scope: !117)
!147 = !DILocation(line: 726, column: 30, scope: !117)
!148 = !DILocation(line: 727, column: 5, scope: !117)
!149 = !DILocation(line: 723, column: 27, scope: !117)
!150 = distinct !{!150, !136, !148, !52}
!151 = !DILocation(line: 728, column: 1, scope: !117)
!152 = distinct !DISubprogram(name: "index_2d_iterator", scope: !1, file: !1, line: 503, type: !6, isLocal: false, isDefinition: true, scopeLine: 505, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!153 = !DILocation(line: 504, column: 9, scope: !152)
!154 = !{i64 0, i64 8, !7, i64 8, i64 8, !7}
!155 = !DILocation(line: 504, column: 16, scope: !152)
!156 = !DILocation(line: 505, column: 6, scope: !152)
!157 = distinct !DISubprogram(name: "sentinel", scope: !1, file: !1, line: 498, type: !6, isLocal: false, isDefinition: true, scopeLine: 498, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!158 = !DILocation(line: 498, column: 55, scope: !157)
!159 = !DILocation(line: 498, column: 58, scope: !157)
!160 = !{!161, !8, i64 0}
!161 = !{!"_ZTSN17index_2d_iterator8sentinelE", !8, i64 0}
!162 = !DILocation(line: 498, column: 64, scope: !157)
!163 = distinct !DISubprogram(name: "operator==", scope: !1, file: !1, line: 581, type: !6, isLocal: false, isDefinition: true, scopeLine: 585, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!164 = !DILocation(line: 586, column: 9, scope: !163)
!165 = !DILocation(line: 587, column: 9, scope: !163)
!166 = !DILocation(line: 589, column: 16, scope: !163)
!167 = !DILocation(line: 589, column: 18, scope: !163)
!168 = !DILocation(line: 589, column: 20, scope: !163)
!169 = !DILocation(line: 589, column: 29, scope: !163)
!170 = !DILocation(line: 589, column: 24, scope: !163)
!171 = !DILocation(line: 589, column: 9, scope: !163)
!172 = distinct !DISubprogram(name: "__to_raw_pointer<double>", scope: !173, file: !173, line: 1103, type: !6, isLocal: false, isDefinition: true, scopeLine: 1104, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!173 = !DIFile(filename: "/global/u1/w/wash/development/gor-llvm/INSTALL_RELEASE/bin/../include/c++/v1/memory", directory: "/global/homes/w/wash/sandbox/cxx/mditerator")
!174 = !DILocation(line: 1105, column: 12, scope: !172)
!175 = !DILocation(line: 1105, column: 5, scope: !172)
