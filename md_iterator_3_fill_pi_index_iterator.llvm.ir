; ModuleID = 'md_iterator_3.cpp'
source_filename = "md_iterator_3.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"class.std::__1::__libcpp_compressed_pair_imp" }
%"class.std::__1::__libcpp_compressed_pair_imp" = type { double* }

; Function Attrs: nounwind
define void @_Z40fill_pi_index_iterator_sentinel_range_NNlRNSt3__16vectorIdNS_9allocatorIdEEEE(i64, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 !dbg !5 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0, !dbg !7
  %4 = load double*, double** %3, align 8, !dbg !7, !tbaa !11
  %5 = and i64 %0, 31, !dbg !17
  %6 = icmp eq i64 %5, 0, !dbg !17
  tail call void @llvm.assume(i1 %6), !dbg !17
  %7 = ptrtoint double* %4 to i64, !dbg !18
  %8 = and i64 %7, 31, !dbg !18
  %9 = icmp eq i64 %8, 0, !dbg !18
  tail call void @llvm.assume(i1 %9), !dbg !18
  %10 = icmp sgt i64 %0, 0, !dbg !19
  tail call void @llvm.assume(i1 %10) #1, !dbg !19
  br label %11, !dbg !24

; <label>:11:                                     ; preds = %2, %11
  %12 = phi i64 [ %22, %11 ], [ 0, %2 ]
  %13 = phi i64 [ %20, %11 ], [ 0, %2 ]
  %14 = mul nsw i64 %12, %0, !dbg !24
  %15 = add nsw i64 %14, %13, !dbg !25
  %16 = getelementptr inbounds double, double* %4, i64 %15, !dbg !26
  store double 0x40091EB860000000, double* %16, align 8, !dbg !27, !tbaa !28
  %17 = icmp sgt i64 %13, -1, !dbg !30
  tail call void @llvm.assume(i1 %17) #1, !dbg !30
  %18 = add nuw nsw i64 %13, 1, !dbg !33
  %19 = icmp eq i64 %18, %0, !dbg !34
  %20 = select i1 %19, i64 0, i64 %18, !dbg !35
  %21 = zext i1 %19 to i64, !dbg !35
  %22 = add nuw nsw i64 %12, %21, !dbg !35
  %23 = icmp sgt i64 %22, -1, !dbg !36
  tail call void @llvm.assume(i1 %23) #1, !dbg !36
  %24 = icmp eq i64 %22, %0, !dbg !37
  br i1 %24, label %25, label %11, !dbg !38

; <label>:25:                                     ; preds = %11
  ret void, !dbg !39
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #1

; Function Attrs: nounwind
define void @_Z40fill_pi_index_iterator_sentinel_range_NMllRNSt3__16vectorIdNS_9allocatorIdEEEE(i64, i64, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 !dbg !40 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0, !dbg !41
  %5 = load double*, double** %4, align 8, !dbg !41, !tbaa !11
  %6 = and i64 %0, 31, !dbg !43
  %7 = icmp eq i64 %6, 0, !dbg !43
  tail call void @llvm.assume(i1 %7), !dbg !43
  %8 = and i64 %1, 31, !dbg !44
  %9 = icmp eq i64 %8, 0, !dbg !44
  tail call void @llvm.assume(i1 %9), !dbg !44
  %10 = ptrtoint double* %5 to i64, !dbg !45
  %11 = and i64 %10, 31, !dbg !45
  %12 = icmp eq i64 %11, 0, !dbg !45
  tail call void @llvm.assume(i1 %12), !dbg !45
  %13 = icmp sgt i64 %1, 0, !dbg !46
  tail call void @llvm.assume(i1 %13) #1, !dbg !46
  %14 = icmp sgt i64 %0, 0
  br label %15, !dbg !49

; <label>:15:                                     ; preds = %3, %15
  %16 = phi i64 [ 0, %3 ], [ %26, %15 ]
  %17 = phi i64 [ 0, %3 ], [ %24, %15 ]
  %18 = mul nsw i64 %16, %0, !dbg !50
  %19 = add nsw i64 %18, %17, !dbg !51
  %20 = getelementptr inbounds double, double* %5, i64 %19, !dbg !52
  store double 0x40091EB860000000, double* %20, align 8, !dbg !53, !tbaa !28
  %21 = icmp sgt i64 %17, -1, !dbg !54
  tail call void @llvm.assume(i1 %21) #1, !dbg !54
  tail call void @llvm.assume(i1 %14) #1, !dbg !56
  %22 = add nuw nsw i64 %17, 1, !dbg !57
  %23 = icmp eq i64 %22, %0, !dbg !58
  %24 = select i1 %23, i64 0, i64 %22, !dbg !59
  %25 = zext i1 %23 to i64, !dbg !59
  %26 = add nuw nsw i64 %16, %25, !dbg !59
  %27 = icmp sgt i64 %26, -1, !dbg !60
  tail call void @llvm.assume(i1 %27) #1, !dbg !60
  %28 = icmp eq i64 %26, %1, !dbg !61
  br i1 %28, label %29, label %15, !dbg !49

; <label>:29:                                     ; preds = %15
  ret void, !dbg !62
}

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vl,-clflushopt,-clwb,-clzero,-fma4,-mwaitx,-pku,-prefetchwt1,-prfchw,-rdseed,-rtm,-sgx,-sha,-sse4a,-tbm,-xop,-xsavec,-xsaves" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 5.0.0 (git@github.com:GorNishanov/clang.git 7fe33d27853beaa85b039482586ef86039a74b56) (git@github.com:GorNishanov/llvm.git bb958011044a060bda6af65d0e50dfbb52a8a604)", isOptimized: true, runtimeVersion: 0, emissionKind: NoDebug, enums: !2)
!1 = !DIFile(filename: "md_iterator_3.cpp", directory: "/global/homes/w/wash/sandbox/cxx/mditerator")
!2 = !{}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{!"clang version 5.0.0 (git@github.com:GorNishanov/clang.git 7fe33d27853beaa85b039482586ef86039a74b56) (git@github.com:GorNishanov/llvm.git bb958011044a060bda6af65d0e50dfbb52a8a604)"}
!5 = distinct !DISubprogram(name: "fill_pi_index_iterator_sentinel_range_NN", scope: !1, file: !1, line: 684, type: !6, isLocal: false, isDefinition: true, scopeLine: 688, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!6 = !DISubroutineType(types: !2)
!7 = !DILocation(line: 671, column: 47, scope: !8, inlinedAt: !10)
!8 = distinct !DISubprogram(name: "data", scope: !9, file: !9, line: 670, type: !6, isLocal: false, isDefinition: true, scopeLine: 671, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!9 = !DIFile(filename: "/global/u1/w/wash/development/gor-llvm/INSTALL_RELEASE/bin/../include/c++/v1/vector", directory: "/global/homes/w/wash/sandbox/cxx/mditerator")
!10 = distinct !DILocation(line: 689, column: 33, scope: !5)
!11 = !{!12, !13, i64 0}
!12 = !{!"_ZTSNSt3__113__vector_baseIdNS_9allocatorIdEEEE", !13, i64 0, !13, i64 8, !16, i64 16}
!13 = !{!"any pointer", !14, i64 0}
!14 = !{!"omnipotent char", !15, i64 0}
!15 = !{!"Simple C++ TBAA"}
!16 = !{!"_ZTSNSt3__117__compressed_pairIPdNS_9allocatorIdEEEE"}
!17 = !DILocation(line: 691, column: 5, scope: !5)
!18 = !DILocation(line: 692, column: 5, scope: !5)
!19 = !DILocation(line: 587, column: 9, scope: !20, inlinedAt: !21)
!20 = distinct !DISubprogram(name: "operator==", scope: !1, file: !1, line: 581, type: !6, isLocal: false, isDefinition: true, scopeLine: 585, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!21 = distinct !DILocation(line: 596, column: 20, scope: !22, inlinedAt: !23)
!22 = distinct !DISubprogram(name: "operator!=", scope: !1, file: !1, line: 591, type: !6, isLocal: false, isDefinition: true, scopeLine: 595, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!23 = distinct !DILocation(line: 699, column: 18, scope: !5)
!24 = !DILocation(line: 702, column: 25, scope: !5)
!25 = !DILocation(line: 702, column: 17, scope: !5)
!26 = !DILocation(line: 702, column: 9, scope: !5)
!27 = !DILocation(line: 702, column: 30, scope: !5)
!28 = !{!29, !29, i64 0}
!29 = !{!"double", !14, i64 0}
!30 = !DILocation(line: 509, column: 9, scope: !31, inlinedAt: !32)
!31 = distinct !DISubprogram(name: "operator++", scope: !1, file: !1, line: 507, type: !6, isLocal: false, isDefinition: true, scopeLine: 508, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!32 = distinct !DILocation(line: 699, column: 27, scope: !5)
!33 = !DILocation(line: 512, column: 9, scope: !31, inlinedAt: !32)
!34 = !DILocation(line: 514, column: 22, scope: !31, inlinedAt: !32)
!35 = !DILocation(line: 514, column: 13, scope: !31, inlinedAt: !32)
!36 = !DILocation(line: 586, column: 9, scope: !20, inlinedAt: !21)
!37 = !DILocation(line: 596, column: 16, scope: !22, inlinedAt: !23)
!38 = !DILocation(line: 699, column: 5, scope: !5)
!39 = !DILocation(line: 704, column: 1, scope: !5)
!40 = distinct !DISubprogram(name: "fill_pi_index_iterator_sentinel_range_NM", scope: !1, file: !1, line: 706, type: !6, isLocal: false, isDefinition: true, scopeLine: 711, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !2)
!41 = !DILocation(line: 671, column: 47, scope: !8, inlinedAt: !42)
!42 = distinct !DILocation(line: 712, column: 33, scope: !40)
!43 = !DILocation(line: 714, column: 5, scope: !40)
!44 = !DILocation(line: 715, column: 5, scope: !40)
!45 = !DILocation(line: 716, column: 5, scope: !40)
!46 = !DILocation(line: 587, column: 9, scope: !20, inlinedAt: !47)
!47 = distinct !DILocation(line: 596, column: 20, scope: !22, inlinedAt: !48)
!48 = distinct !DILocation(line: 723, column: 18, scope: !40)
!49 = !DILocation(line: 723, column: 5, scope: !40)
!50 = !DILocation(line: 726, column: 25, scope: !40)
!51 = !DILocation(line: 726, column: 17, scope: !40)
!52 = !DILocation(line: 726, column: 9, scope: !40)
!53 = !DILocation(line: 726, column: 30, scope: !40)
!54 = !DILocation(line: 509, column: 9, scope: !31, inlinedAt: !55)
!55 = distinct !DILocation(line: 723, column: 27, scope: !40)
!56 = !DILocation(line: 510, column: 9, scope: !31, inlinedAt: !55)
!57 = !DILocation(line: 512, column: 9, scope: !31, inlinedAt: !55)
!58 = !DILocation(line: 514, column: 22, scope: !31, inlinedAt: !55)
!59 = !DILocation(line: 514, column: 13, scope: !31, inlinedAt: !55)
!60 = !DILocation(line: 586, column: 9, scope: !20, inlinedAt: !47)
!61 = !DILocation(line: 596, column: 16, scope: !22, inlinedAt: !48)
!62 = !DILocation(line: 728, column: 1, scope: !40)
