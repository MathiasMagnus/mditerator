Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -std=c++14 -fno-exceptions -fno-rtti -g0 -O3 -xAVX2 -fast -fstrict-aliasing -fomit-frame-pointer -fno-asynchronous-unwind-tables -fno-dwarf2-cfi-asm -Wall -DFILL_PI_LOOP -qopt-report=5 -S -o md_iterator_3_fill_pi_loop.icpc.rpt

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: disabled
  -inline-max-per-compile: disabled

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [1/3=33.3%] <compiler generated>
  -> EXTERN: /opt/gcc/6.3.0/snos/include/g++/iostream:(74,25) __cxa_atexit()
  -> EXTERN: /opt/gcc/6.3.0/snos/include/g++/iostream:(74,25) std::ios_base::Init::Init(std::ios_base::Init *)


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: fill_pi_loop_NN(std::ptrdiff_t, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (fill_pi_loop_NN(std::ptrdiff_t, double *)) [2/3=66.7%] md_iterator_3.cpp(736,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at md_iterator_3.cpp(741,5)
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <A[i+j*N]>, stride is unknown to compiler   [ md_iterator_3.cpp(743,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 1.140 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at md_iterator_3.cpp(742,9)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

md_iterator_3.cpp(736,1):remark #34051: REGISTER ALLOCATION : [_Z15fill_pi_loop_NNlPd] md_iterator_3.cpp:736

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rax rdx rcx rsi rdi r8-r9 zmm0]
        
    Routine temporaries
        Total         :      19
            Global    :      15
            Local     :       4
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: fill_pi_loop_NM(std::ptrdiff_t, std::ptrdiff_t, double *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (fill_pi_loop_NM(std::ptrdiff_t, std::ptrdiff_t, double *)) [3/3=100.0%] md_iterator_3.cpp(751,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at md_iterator_3.cpp(757,5)
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <A[i+j*N]>, stride is unknown to compiler   [ md_iterator_3.cpp(759,13) ]
   remark #15305: vectorization support: vector length 2
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 1.140 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at md_iterator_3.cpp(758,9)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

md_iterator_3.cpp(751,1):remark #34051: REGISTER ALLOCATION : [_Z15fill_pi_loop_NMllPd] md_iterator_3.cpp:751

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rsi rdi r8-r11 zmm0]
        
    Routine temporaries
        Total         :      24
            Global    :      18
            Local     :       6
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
